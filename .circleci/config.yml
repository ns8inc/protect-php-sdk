commands:
  test:
    description: "Run All Unit Tests"
    steps:
      - checkout
      - run:
          command: composer install --no-ansi
          name: Install PHP SDK
      - run:
          command: composer lint
          name: Lint
      - run:
          command: composer test-coverage
          name: Run Tests
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage/html

jobs:
  deploy:
    docker:
      - image: 244249143763.dkr.ecr.us-west-2.amazonaws.com/ns8-php
    steps:
      - add_ssh_keys:
          fingerprints:
            - "85:07:c0:6d:1b:fd:2f:3e:74:05:82:8e:d6:23:cb:c0"
      - checkout
      - run:
          command: |
            git config user.email noreply@ns8.com
            git config user.name 'CircleCI'
          name:
            Setup Git
      - run:
          command: |
            version=$(git tag -l | sort -V | tail -n 1 | awk -F . '{$NF+=1; print $0}' OFS=".") # Find highest version tag
            version="${version:-0.0.0}" # If the repo has no tags, default the initial version to 0.0.0
            git tag $version
            if ! git push origin $version; then
              echo "Push failed. Please add this CircleCI deploy key to your repo with write access:"
              ssh-keygen -y -f ~/.ssh/id_rsa
              exit 1
            fi
          name: Bump Version
  test_latest:
    docker:
      - image: 244249143763.dkr.ecr.us-west-2.amazonaws.com/ns8-php
    steps:
      - test
  test_7-1:
    docker:
      - image: 244249143763.dkr.ecr.us-west-2.amazonaws.com/ns8-php:7.1
    steps:
      - test
  test_7-2:
    docker:
      - image: 244249143763.dkr.ecr.us-west-2.amazonaws.com/ns8-php:7.2
    steps:
      - test
  test_7-3:
    docker:
      - image: 244249143763.dkr.ecr.us-west-2.amazonaws.com/ns8-php:7.3
    steps:
      - test

version: 2.1

workflows:
  test_and_deploy:
    jobs:
      - test_latest
      - approve:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - test_latest
      - test_7-1:
          requires:
            - approve
      - test_7-2:
          requires:
            - approve
      - test_7-3:
          requires:
            - approve
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - test_7-1
            - test_7-2
            - test_7-3
